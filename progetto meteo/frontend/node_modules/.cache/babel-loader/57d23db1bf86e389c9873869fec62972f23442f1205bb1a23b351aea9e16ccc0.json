{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"RegisterView\",\n  data() {\n    return {\n      form: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      error: '',\n      success: false\n    };\n  },\n  methods: {\n    async handleRegister() {\n      this.error = '';\n      this.success = false;\n      try {\n        await axios.post('http://localhost:3000/api/auth/register', this.form);\n        this.success = true;\n        this.form.username = '';\n        this.form.email = '';\n        this.form.password = '';\n        this.$emit('toast', 'Registrazione avvenuta con successo! Ora puoi accedere.', 'success');\n      } catch (err) {\n        this.error = err.response?.data?.message || 'Errore durante la registrazione.';\n        this.$emit('toast', this.error, 'danger');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","form","username","email","password","error","success","methods","handleRegister","post","$emit","err","response","message"],"sources":["C:\\Programmazione\\Wheater_Report\\progetto\\frontend\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-view container mt-5\">\r\n    <h2>Registrazione</h2>\r\n    <form @submit.prevent=\"handleRegister\" class=\"mt-4\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"username\" class=\"form-label\">Username</label>\r\n        <input v-model=\"form.username\" type=\"text\" class=\"form-control\" id=\"username\" required />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"email\" class=\"form-label\">Email</label>\r\n        <input v-model=\"form.email\" type=\"email\" class=\"form-control\" id=\"email\" required />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"password\" class=\"form-label\">Password</label>\r\n        <input v-model=\"form.password\" type=\"password\" class=\"form-control\" id=\"password\" required minlength=\"6\" />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary\">Registrati</button>\r\n    </form>\r\n    <div v-if=\"error\" class=\"alert alert-danger mt-3\">{{ error }}</div>\r\n    <div v-if=\"success\" class=\"alert alert-success mt-3\">Registrazione avvenuta con successo! Ora puoi <router-link to=\"/login\">accedere</router-link>.</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: \"RegisterView\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n      },\r\n      error: '',\r\n      success: false\r\n    }\r\n  },\r\n  methods: {\r\n    async handleRegister() {\r\n      this.error = ''\r\n      this.success = false\r\n      try {\r\n        await axios.post('http://localhost:3000/api/auth/register', this.form)\r\n        this.success = true\r\n        this.form.username = ''\r\n        this.form.email = ''\r\n        this.form.password = ''\r\n        this.$emit('toast', 'Registrazione avvenuta con successo! Ora puoi accedere.', 'success')\r\n      } catch (err) {\r\n        this.error = err.response?.data?.message || 'Errore durante la registrazione.'\r\n        this.$emit('toast', this.error, 'danger')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script> "],"mappings":"AAwBA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,CAACH,KAAI,GAAI,EAAC;MACd,IAAI,CAACC,OAAM,GAAI,KAAI;MACnB,IAAI;QACF,MAAMR,KAAK,CAACW,IAAI,CAAC,yCAAyC,EAAE,IAAI,CAACR,IAAI;QACrE,IAAI,CAACK,OAAM,GAAI,IAAG;QAClB,IAAI,CAACL,IAAI,CAACC,QAAO,GAAI,EAAC;QACtB,IAAI,CAACD,IAAI,CAACE,KAAI,GAAI,EAAC;QACnB,IAAI,CAACF,IAAI,CAACG,QAAO,GAAI,EAAC;QACtB,IAAI,CAACM,KAAK,CAAC,OAAO,EAAE,yDAAyD,EAAE,SAAS;MAC1F,EAAE,OAAOC,GAAG,EAAE;QACZ,IAAI,CAACN,KAAI,GAAIM,GAAG,CAACC,QAAQ,EAAEZ,IAAI,EAAEa,OAAM,IAAK,kCAAiC;QAC7E,IAAI,CAACH,KAAK,CAAC,OAAO,EAAE,IAAI,CAACL,KAAK,EAAE,QAAQ;MAC1C;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}