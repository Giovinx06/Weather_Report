{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: \"DashboardView\",\n  computed: {\n    ...mapGetters(['currentUser', 'weatherData']),\n    user() {\n      return this.currentUser || {};\n    },\n    isDark() {\n      return document.body.classList.contains('dark');\n    }\n  },\n  methods: {\n    formatDate(dateStr) {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      return date.toLocaleString();\n    },\n    rowStyle(item) {\n      if (!item.description) return {};\n      const desc = item.description.toLowerCase();\n      // Colori per tema chiaro\n      const light = {\n        rain: {\n          background: '#e3f0fa',\n          color: '#222'\n        },\n        clear: {\n          background: '#fffbe6',\n          color: '#222'\n        },\n        cloud: {\n          background: '#f0f4f7',\n          color: '#222'\n        },\n        snow: {\n          background: '#f8fafd',\n          color: '#222'\n        },\n        storm: {\n          background: '#e0e0f7',\n          color: '#222'\n        },\n        default: {\n          background: '#f9f9f9',\n          color: '#222'\n        }\n      };\n      // Colori per tema scuro\n      const dark = {\n        rain: {\n          background: '#23384d',\n          color: '#e3f0fa'\n        },\n        clear: {\n          background: '#3a3a1a',\n          color: '#fffbe6'\n        },\n        cloud: {\n          background: '#2c3237',\n          color: '#f0f4f7'\n        },\n        snow: {\n          background: '#2e3a40',\n          color: '#f8fafd'\n        },\n        storm: {\n          background: '#3a2e4d',\n          color: '#e0e0f7'\n        },\n        default: {\n          background: '#23272b',\n          color: '#f1f1f1'\n        }\n      };\n      const theme = this.isDark ? dark : light;\n      if (desc.includes('rain')) return theme.rain;\n      if (desc.includes('clear')) return theme.clear;\n      if (desc.includes('cloud')) return theme.cloud;\n      if (desc.includes('snow')) return theme.snow;\n      if (desc.includes('storm')) return theme.storm;\n      return theme.default;\n    }\n  },\n  mounted() {\n    if (this.weatherData.length === 0) {\n      this.$store.dispatch('fetchWeatherData').catch(() => {});\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","computed","user","currentUser","isDark","document","body","classList","contains","methods","formatDate","dateStr","date","Date","toLocaleString","rowStyle","item","description","desc","toLowerCase","light","rain","background","color","clear","cloud","snow","storm","default","dark","theme","includes","mounted","weatherData","length","$store","dispatch","catch"],"sources":["C:\\Programmazione\\Wheater_Report\\progetto\\frontend\\src\\views\\DashboardView.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-view container mt-5\">\r\n    <h2>Benvenuto nella Dashboard</h2>\r\n    <div class=\"alert alert-info mt-3\">\r\n      Ciao, {{ user.username }}! Qui puoi visualizzare i tuoi dati e le informazioni meteo.\r\n    </div>\r\n\r\n    <div class=\"card mt-4\">\r\n      <div class=\"card-header\">\r\n        Dati utente\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p><strong>Username:</strong> {{ user.username }}</p>\r\n        <p><strong>Email:</strong> {{ user.email }}</p>\r\n        <p><strong>Ruolo:</strong> {{ user.role }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card mt-4\">\r\n      <div class=\"card-header\">\r\n        Dati Meteo (esempio)\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div v-if=\"weatherData.length === 0\">\r\n          Nessun dato meteo disponibile.\r\n        </div>\r\n        <table v-else class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Città</th>\r\n              <th>Temperatura</th>\r\n              <th>Condizione</th>\r\n              <th>Data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(item, idx) in weatherData\" :key=\"idx\" :style=\"rowStyle(item)\">\r\n              <td>{{ item.city }}</td>\r\n              <td>{{ item.temperature }} °C</td>\r\n              <td>{{ item.description }}</td>\r\n              <td>{{ formatDate(item.fetchDate || item.createdAt || item.date) }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: \"DashboardView\",\r\n  computed: {\r\n    ...mapGetters(['currentUser', 'weatherData']),\r\n    user() {\r\n      return this.currentUser || {};\r\n    },\r\n    isDark() {\r\n      return document.body.classList.contains('dark');\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate(dateStr) {\r\n      if (!dateStr) return '';\r\n      const date = new Date(dateStr);\r\n      return date.toLocaleString();\r\n    },\r\n    rowStyle(item) {\r\n      if (!item.description) return {};\r\n      const desc = item.description.toLowerCase();\r\n      // Colori per tema chiaro\r\n      const light = {\r\n        rain:   { background: '#e3f0fa', color: '#222' },\r\n        clear:  { background: '#fffbe6', color: '#222' },\r\n        cloud:  { background: '#f0f4f7', color: '#222' },\r\n        snow:   { background: '#f8fafd', color: '#222' },\r\n        storm:  { background: '#e0e0f7', color: '#222' },\r\n        default:{ background: '#f9f9f9', color: '#222' }\r\n      };\r\n      // Colori per tema scuro\r\n      const dark = {\r\n        rain:   { background: '#23384d', color: '#e3f0fa' },\r\n        clear:  { background: '#3a3a1a', color: '#fffbe6' },\r\n        cloud:  { background: '#2c3237', color: '#f0f4f7' },\r\n        snow:   { background: '#2e3a40', color: '#f8fafd' },\r\n        storm:  { background: '#3a2e4d', color: '#e0e0f7' },\r\n        default:{ background: '#23272b', color: '#f1f1f1' }\r\n      };\r\n      const theme = this.isDark ? dark : light;\r\n      if (desc.includes('rain')) return theme.rain;\r\n      if (desc.includes('clear')) return theme.clear;\r\n      if (desc.includes('cloud')) return theme.cloud;\r\n      if (desc.includes('snow')) return theme.snow;\r\n      if (desc.includes('storm')) return theme.storm;\r\n      return theme.default;\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.weatherData.length === 0) {\r\n      this.$store.dispatch('fetchWeatherData').catch(() => {})\r\n    }\r\n  }\r\n}\r\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}