{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard-view container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"alert alert-info mt-3\"\n};\nconst _hoisted_3 = {\n  class: \"card mt-4\"\n};\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"card mt-4\"\n};\nconst _hoisted_6 = {\n  class: \"card-body\"\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"table table-striped\"\n};\nconst _hoisted_9 = {\n  class: \"card mt-4\"\n};\nconst _hoisted_10 = {\n  class: \"card-body\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"text-muted\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_line_chart = _resolveComponent(\"line-chart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Benvenuto nella Dashboard\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, \" Ciao, \" + _toDisplayString($options.user.username) + \"! Qui puoi visualizzare i tuoi dati e le informazioni meteo. \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"card-header\"\n  }, \" Dati utente \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Username:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.user.username), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Email:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.user.email), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Ruolo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.user.role), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_5, [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"card-header\"\n  }, \" Dati Meteo (esempio) \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_ctx.weatherData.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \" Nessun dato meteo disponibile. \")) : (_openBlock(), _createElementBlock(\"table\", _hoisted_8, [_cache[4] || (_cache[4] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Città\"), _createElementVNode(\"th\", null, \"Temperatura\"), _createElementVNode(\"th\", null, \"Condizione\"), _createElementVNode(\"th\", null, \"Data\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.weatherData, (item, idx) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: idx\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.city), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.temperature) + \" °C\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.description), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(item.fetchDate || item.createdAt || item.date)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]))])]), _createElementVNode(\"div\", _hoisted_9, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"card-header\"\n  }, \" Andamento Temperature (ultime ricerche) \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, [_ctx.weatherData.length > 0 ? (_openBlock(), _createBlock(_component_line_chart, {\n    key: 0,\n    \"chart-data\": $options.chartData,\n    \"chart-options\": $options.chartOptions\n  }, null, 8 /* PROPS */, [\"chart-data\", \"chart-options\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"Nessun dato per il grafico.\"))])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$options","user","username","_hoisted_3","_hoisted_4","_createTextVNode","email","role","_hoisted_5","_hoisted_6","_ctx","weatherData","length","_hoisted_7","_hoisted_8","_Fragment","_renderList","item","idx","city","temperature","description","formatDate","fetchDate","createdAt","date","_hoisted_9","_hoisted_10","_createBlock","_component_line_chart","chartData","chartOptions","_hoisted_11"],"sources":["C:\\Programmazione\\Wheater_Report\\progetto\\frontend\\src\\views\\DashboardView.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-view container mt-5\">\r\n    <h2>Benvenuto nella Dashboard</h2>\r\n    <div class=\"alert alert-info mt-3\">\r\n      Ciao, {{ user.username }}! Qui puoi visualizzare i tuoi dati e le informazioni meteo.\r\n    </div>\r\n\r\n    <div class=\"card mt-4\">\r\n      <div class=\"card-header\">\r\n        Dati utente\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p><strong>Username:</strong> {{ user.username }}</p>\r\n        <p><strong>Email:</strong> {{ user.email }}</p>\r\n        <p><strong>Ruolo:</strong> {{ user.role }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card mt-4\">\r\n      <div class=\"card-header\">\r\n        Dati Meteo (esempio)\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div v-if=\"weatherData.length === 0\">\r\n          Nessun dato meteo disponibile.\r\n        </div>\r\n        <table v-else class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Città</th>\r\n              <th>Temperatura</th>\r\n              <th>Condizione</th>\r\n              <th>Data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(item, idx) in weatherData\" :key=\"idx\">\r\n              <td>{{ item.city }}</td>\r\n              <td>{{ item.temperature }} °C</td>\r\n              <td>{{ item.description }}</td>\r\n              <td>{{ formatDate(item.fetchDate || item.createdAt || item.date) }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card mt-4\">\r\n      <div class=\"card-header\">\r\n        Andamento Temperature (ultime ricerche)\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <line-chart v-if=\"weatherData.length > 0\" :chart-data=\"chartData\" :chart-options=\"chartOptions\" />\r\n        <div v-else class=\"text-muted\">Nessun dato per il grafico.</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport { Line } from 'vue-chartjs'\r\nimport {\r\n  Chart as ChartJS,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement\r\n} from 'chart.js'\r\n\r\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement)\r\n\r\nconst LineChart = {\r\n  extends: Line,\r\n  props: ['chartData', 'chartOptions'],\r\n  mounted() {\r\n    this.renderChart(this.chartData, this.chartOptions)\r\n  },\r\n  watch: {\r\n    chartData(newData) {\r\n      this.renderChart(newData, this.chartOptions)\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: \"DashboardView\",\r\n  components: { LineChart },\r\n  computed: {\r\n    ...mapGetters(['currentUser', 'weatherData']),\r\n    user() {\r\n      return this.currentUser || {};\r\n    },\r\n    chartData() {\r\n      return {\r\n        labels: this.weatherData.map(item => this.formatDate(item.fetchDate || item.createdAt || item.date)),\r\n        datasets: [\r\n          {\r\n            label: 'Temperatura (°C)',\r\n            data: this.weatherData.map(item => item.temperature),\r\n            fill: false,\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            tension: 0.1\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    chartOptions() {\r\n      return {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: { display: true },\r\n          title: { display: true, text: 'Andamento Temperature' }\r\n        },\r\n        scales: {\r\n          x: { title: { display: true, text: 'Data' } },\r\n          y: { title: { display: true, text: 'Temperatura (°C)' } }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate(dateStr) {\r\n      if (!dateStr) return '';\r\n      const date = new Date(dateStr);\r\n      return date.toLocaleString();\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.weatherData.length === 0) {\r\n      this.$store.dispatch('fetchWeatherData').catch(() => {})\r\n    }\r\n  }\r\n}\r\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}