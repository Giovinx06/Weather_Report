{"ast":null,"code":"export default {\n  name: 'LoginView',\n  data() {\n    return {\n      username: '',\n      password: '',\n      error: null,\n      loading: false\n    };\n  },\n  methods: {\n    login() {\n      this.error = null;\n      this.loading = true;\n      this.$store.dispatch('login', {\n        username: this.username,\n        password: this.password\n      }).then(() => {\n        // Redirect to dashboard or the page they were trying to visit\n        const redirectPath = this.$route.query.redirect || '/dashboard';\n        this.$router.push(redirectPath);\n      }).catch(err => {\n        this.error = err.response?.data?.message || 'Si è verificato un errore durante il login';\n      }).finally(() => {\n        this.loading = false;\n      });\n    }\n  },\n  created() {\n    // If already logged in, redirect to dashboard\n    if (this.$store.getters.isLoggedIn) {\n      this.$router.push('/dashboard');\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","password","error","loading","methods","login","$store","dispatch","then","redirectPath","$route","query","redirect","$router","push","catch","err","response","message","finally","created","getters","isLoggedIn"],"sources":["C:\\Programmazione\\Wheater_Report\\progetto\\frontend\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header bg-primary text-white\">\r\n            <h4 class=\"mb-0\">Login</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form @submit.prevent=\"login\">\r\n              <div class=\"alert alert-danger\" v-if=\"error\">\r\n                {{ error }}\r\n              </div>\r\n              \r\n              <div class=\"mb-3\">\r\n                <label for=\"username\" class=\"form-label\">Username</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"username\"\r\n                  class=\"form-control\" \r\n                  v-model=\"username\" \r\n                  required\r\n                  placeholder=\"Inserisci il tuo username\"\r\n                >\r\n              </div>\r\n              \r\n              <div class=\"mb-3\">\r\n                <label for=\"password\" class=\"form-label\">Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"password\"\r\n                  class=\"form-control\" \r\n                  v-model=\"password\" \r\n                  required\r\n                  placeholder=\"Inserisci la tua password\"\r\n                >\r\n              </div>\r\n              \r\n              <div class=\"d-grid gap-2\">\r\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\r\n                  {{ loading ? 'Accesso in corso...' : 'Accedi' }}\r\n                </button>\r\n              </div>\r\n            </form>\r\n            \r\n            <div class=\"mt-3 text-center\">\r\n              <p>Non hai un account? <router-link to=\"/register\">Registrati qui</router-link></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'LoginView',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      error: null,\r\n      loading: false\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n      this.error = null\r\n      this.loading = true\r\n      \r\n      this.$store.dispatch('login', {\r\n        username: this.username,\r\n        password: this.password\r\n      })\r\n      .then(() => {\r\n        // Redirect to dashboard or the page they were trying to visit\r\n        const redirectPath = this.$route.query.redirect || '/dashboard'\r\n        this.$router.push(redirectPath)\r\n      })\r\n      .catch(err => {\r\n        this.error = err.response?.data?.message || 'Si è verificato un errore durante il login'\r\n      })\r\n      .finally(() => {\r\n        this.loading = false\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    // If already logged in, redirect to dashboard\r\n    if (this.$store.getters.isLoggedIn) {\r\n      this.$router.push('/dashboard')\r\n    }\r\n  }\r\n}\r\n</script> "],"mappings":"AAwDA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACH,KAAI,GAAI,IAAG;MAChB,IAAI,CAACC,OAAM,GAAI,IAAG;MAElB,IAAI,CAACG,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE;QAC5BP,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC,EACAO,IAAI,CAAC,MAAM;QACV;QACA,MAAMC,YAAW,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,QAAO,IAAK,YAAW;QAC9D,IAAI,CAACC,OAAO,CAACC,IAAI,CAACL,YAAY;MAChC,CAAC,EACAM,KAAK,CAACC,GAAE,IAAK;QACZ,IAAI,CAACd,KAAI,GAAIc,GAAG,CAACC,QAAQ,EAAElB,IAAI,EAAEmB,OAAM,IAAK,4CAA2C;MACzF,CAAC,EACAC,OAAO,CAAC,MAAM;QACb,IAAI,CAAChB,OAAM,GAAI,KAAI;MACrB,CAAC;IACH;EACF,CAAC;EACDiB,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,IAAI,CAACd,MAAM,CAACe,OAAO,CAACC,UAAU,EAAE;MAClC,IAAI,CAACT,OAAO,CAACC,IAAI,CAAC,YAAY;IAChC;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}