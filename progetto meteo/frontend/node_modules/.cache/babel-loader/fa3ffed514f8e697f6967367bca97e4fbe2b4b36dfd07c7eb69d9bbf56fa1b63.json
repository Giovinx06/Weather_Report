{"ast":null,"code":"export default {\n  name: 'WeatherTimeline',\n  props: {\n    weatherData: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      activeItemIndex: -1,\n      isDragging: false,\n      startX: 0,\n      scrollLeft: 0,\n      scale: 1,\n      timelineWidth: 1000,\n      // Larghezza iniziale della timeline\n      cursorPosition: 50,\n      // Posizione in percentuale\n      isDraggingCursor: false\n    };\n  },\n  computed: {\n    sortedWeatherData() {\n      return [...this.weatherData].sort((a, b) => {\n        const dateA = new Date(a.fetchDate || a.createdAt || a.date);\n        const dateB = new Date(b.fetchDate || b.createdAt || b.date);\n        return dateA - dateB;\n      });\n    },\n    timeRange() {\n      if (!this.sortedWeatherData.length) return {\n        min: new Date(),\n        max: new Date()\n      };\n      const dates = this.sortedWeatherData.map(item => new Date(item.fetchDate || item.createdAt || item.date));\n      const minDate = new Date(Math.min(...dates));\n      const maxDate = new Date(Math.max(...dates));\n\n      // Aggiungi un po' di margine\n      minDate.setHours(minDate.getHours() - 1);\n      maxDate.setHours(maxDate.getHours() + 1);\n      return {\n        min: minDate,\n        max: maxDate\n      };\n    },\n    timelineTicks() {\n      if (!this.sortedWeatherData.length) return [];\n      const {\n        min,\n        max\n      } = this.timeRange;\n      const range = max - min;\n      const ticks = [];\n\n      // Calcola il numero ottimale di tick in base alla scala\n      const numTicks = 5 * this.scale;\n      for (let i = 0; i <= numTicks; i++) {\n        const tickTime = new Date(min.getTime() + range * (i / numTicks));\n        ticks.push({\n          time: tickTime,\n          position: i / numTicks * 100,\n          label: this.formatTickLabel(tickTime)\n        });\n      }\n      return ticks;\n    },\n    activeItem() {\n      return this.activeItemIndex >= 0 ? this.sortedWeatherData[this.activeItemIndex] : null;\n    }\n  },\n  mounted() {\n    this.updateTimelineWidth();\n    window.addEventListener('resize', this.updateTimelineWidth);\n    document.addEventListener('mousemove', this.onDrag);\n    document.addEventListener('mouseup', this.stopDrag);\n\n    // Imposta il primo elemento come attivo se c'è almeno un elemento\n    if (this.sortedWeatherData.length) {\n      this.setActiveItem(0);\n    }\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.updateTimelineWidth);\n    document.removeEventListener('mousemove', this.onDrag);\n    document.removeEventListener('mouseup', this.stopDrag);\n  },\n  methods: {\n    updateTimelineWidth() {\n      // Calcola la larghezza base della timeline\n      const baseWidth = this.$refs.timelineWrapper?.clientWidth || 1000;\n\n      // Applica la scala\n      this.timelineWidth = baseWidth * this.scale;\n    },\n    startDrag(e) {\n      this.isDragging = true;\n      this.startX = e.pageX - this.$refs.timelineSlider.offsetLeft;\n      this.scrollLeft = this.$refs.timelineSlider.scrollLeft;\n    },\n    onDrag(e) {\n      if (!this.isDragging) return;\n      e.preventDefault();\n      const x = e.pageX - this.$refs.timelineSlider.offsetLeft;\n      const walkX = (x - this.startX) * 1.5; // Moltiplica per un fattore per accelerare lo scorrimento\n      this.$refs.timelineSlider.scrollLeft = this.scrollLeft - walkX;\n\n      // Aggiorna la posizione del cursore in base allo scroll\n      this.updateCursorFromScroll();\n    },\n    stopDrag() {\n      this.isDragging = false;\n    },\n    zoomIn() {\n      if (this.scale < 3) {\n        this.scale += 0.5;\n        this.updateTimelineWidth();\n      }\n    },\n    zoomOut() {\n      if (this.scale > 1) {\n        this.scale -= 0.5;\n        this.updateTimelineWidth();\n      }\n    },\n    getPositionPercent(item) {\n      const {\n        min,\n        max\n      } = this.timeRange;\n      const range = max - min;\n      const time = new Date(item.fetchDate || item.createdAt || item.date);\n      return (time - min) / range * 100;\n    },\n    formatDate(dateStr, detailed = false) {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      if (detailed) {\n        return date.toLocaleString();\n      } else {\n        return date.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      }\n    },\n    formatTickLabel(date) {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    setActiveItem(index) {\n      this.activeItemIndex = index;\n\n      // Imposta la posizione del cursore sul punto selezionato\n      if (index >= 0) {\n        const item = this.sortedWeatherData[index];\n        this.cursorPosition = this.getPositionPercent(item);\n\n        // Scorri la vista per centrare l'elemento selezionato\n        this.scrollToPosition(this.cursorPosition);\n      }\n    },\n    scrollToPosition(positionPercent) {\n      const timelineSlider = this.$refs.timelineSlider;\n      const scrollPos = positionPercent / 100 * this.timelineWidth - timelineSlider.clientWidth / 2;\n      timelineSlider.scrollLeft = scrollPos;\n    },\n    updateCursorFromScroll() {\n      // Calcola la posizione del cursore in base allo scroll\n      const timelineSlider = this.$refs.timelineSlider;\n      const centerPos = timelineSlider.scrollLeft + timelineSlider.clientWidth / 2;\n      this.cursorPosition = centerPos / this.timelineWidth * 100;\n\n      // Trova l'elemento più vicino alla posizione del cursore\n      this.findClosestItem();\n    },\n    findClosestItem() {\n      if (!this.sortedWeatherData.length) return;\n      let closestIndex = 0;\n      let minDistance = Number.MAX_VALUE;\n      this.sortedWeatherData.forEach((item, index) => {\n        const position = this.getPositionPercent(item);\n        const distance = Math.abs(position - this.cursorPosition);\n        if (distance < minDistance) {\n          minDistance = distance;\n          closestIndex = index;\n        }\n      });\n      if (this.activeItemIndex !== closestIndex) {\n        this.activeItemIndex = closestIndex;\n      }\n    },\n    getWeatherClass(item) {\n      if (!item || !item.description) return '';\n      const desc = item.description.toLowerCase();\n      if (desc.includes('pioggia') || desc.includes('rain')) return 'weather-rain';\n      if (desc.includes('sereno') || desc.includes('clear') || desc.includes('sun')) return 'weather-clear';\n      if (desc.includes('nuvol') || desc.includes('cloud')) return 'weather-cloud';\n      if (desc.includes('neve') || desc.includes('snow')) return 'weather-snow';\n      if (desc.includes('temporale') || desc.includes('storm') || desc.includes('thunder')) return 'weather-storm';\n      if (desc.includes('nebbia') || desc.includes('fog')) return 'weather-fog';\n      return '';\n    },\n    getWeatherIcon(item) {\n      if (!item || !item.description) return 'fas fa-cloud fa-lg text-secondary';\n      const desc = item.description.toLowerCase();\n      if (desc.includes('pioggia') || desc.includes('rain')) return 'fas fa-cloud-rain fa-lg text-info';\n      if (desc.includes('sereno') || desc.includes('clear') || desc.includes('sun')) return 'fas fa-sun fa-lg text-warning';\n      if (desc.includes('nuvol') || desc.includes('cloud')) return 'fas fa-cloud fa-lg text-secondary';\n      if (desc.includes('neve') || desc.includes('snow')) return 'fas fa-snowflake fa-lg text-info';\n      if (desc.includes('temporale') || desc.includes('storm') || desc.includes('thunder')) return 'fas fa-bolt fa-lg text-warning';\n      if (desc.includes('nebbia') || desc.includes('fog')) return 'fas fa-smog fa-lg text-secondary';\n      if (desc.includes('vento') || desc.includes('wind')) return 'fas fa-wind fa-lg text-info';\n      return 'fas fa-cloud fa-lg text-secondary';\n    }\n  },\n  watch: {\n    weatherData: {\n      handler() {\n        this.updateTimelineWidth();\n\n        // Imposta il primo elemento come attivo se c'è almeno un elemento\n        if (this.sortedWeatherData.length && this.activeItemIndex === -1) {\n          this.setActiveItem(0);\n        }\n      },\n      deep: true\n    },\n    scale() {\n      this.updateTimelineWidth();\n    }\n  }\n};","map":{"version":3,"names":["name","props","weatherData","type","Array","required","data","activeItemIndex","isDragging","startX","scrollLeft","scale","timelineWidth","cursorPosition","isDraggingCursor","computed","sortedWeatherData","sort","a","b","dateA","Date","fetchDate","createdAt","date","dateB","timeRange","length","min","max","dates","map","item","minDate","Math","maxDate","setHours","getHours","timelineTicks","range","ticks","numTicks","i","tickTime","getTime","push","time","position","label","formatTickLabel","activeItem","mounted","updateTimelineWidth","window","addEventListener","document","onDrag","stopDrag","setActiveItem","beforeUnmount","removeEventListener","methods","baseWidth","$refs","timelineWrapper","clientWidth","startDrag","e","pageX","timelineSlider","offsetLeft","preventDefault","x","walkX","updateCursorFromScroll","zoomIn","zoomOut","getPositionPercent","formatDate","dateStr","detailed","toLocaleString","toLocaleTimeString","hour","minute","index","scrollToPosition","positionPercent","scrollPos","centerPos","findClosestItem","closestIndex","minDistance","Number","MAX_VALUE","forEach","distance","abs","getWeatherClass","description","desc","toLowerCase","includes","getWeatherIcon","watch","handler","deep"],"sources":["C:\\Users\\Giovanni\\OneDrive\\Desktop\\Scuola\\TPI\\progetto meteo\\frontend\\src\\components\\WeatherTimeline.vue"],"sourcesContent":["<template>\r\n  <div class=\"weather-timeline-container\">\r\n    <div class=\"timeline-header d-flex justify-content-between align-items-center mb-3\">\r\n      <h5 class=\"mb-0\">Timeline Previsioni</h5>\r\n      <div class=\"timeline-controls\">\r\n        <button class=\"btn btn-sm btn-outline-primary me-2\" @click=\"zoomOut\" :disabled=\"scale <= 1\">\r\n          <i class=\"fas fa-search-minus\"></i>\r\n        </button>\r\n        <button class=\"btn btn-sm btn-outline-primary\" @click=\"zoomIn\" :disabled=\"scale >= 3\">\r\n          <i class=\"fas fa-search-plus\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"timeline-wrapper\" ref=\"timelineWrapper\">\r\n      <div class=\"timeline-slider\" ref=\"timelineSlider\">\r\n        <div \r\n          class=\"timeline-track\"\r\n          :style=\"{ width: `${timelineWidth}px` }\"\r\n          @mousedown=\"startDrag\"\r\n        >\r\n          <div class=\"timeline-ticks\">\r\n            <div \r\n              v-for=\"(tick, idx) in timelineTicks\" \r\n              :key=\"idx\" \r\n              class=\"timeline-tick\"\r\n              :style=\"{ left: `${tick.position}%` }\"\r\n            >\r\n              <div class=\"tick-line\"></div>\r\n              <div class=\"tick-label\">{{ tick.label }}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            v-for=\"(item, idx) in sortedWeatherData\" \r\n            :key=\"idx\" \r\n            class=\"timeline-item\"\r\n            :class=\"[getWeatherClass(item), { active: activeItemIndex === idx }]\"\r\n            :style=\"{ left: `${getPositionPercent(item)}%` }\"\r\n            @click=\"setActiveItem(idx)\"\r\n          >\r\n            <div class=\"timeline-item-dot\"></div>\r\n            <div class=\"timeline-item-content\">\r\n              <div class=\"timeline-item-icon\">\r\n                <i :class=\"getWeatherIcon(item)\"></i>\r\n              </div>\r\n              <div class=\"timeline-item-info\">\r\n                <div class=\"timeline-item-city\">{{ item.city }}</div>\r\n                <div class=\"timeline-item-temp\">{{ item.temperature }}°C</div>\r\n                <div class=\"timeline-item-date\">{{ formatDate(item.fetchDate || item.createdAt || item.date) }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"timeline-cursor\" :style=\"{ left: `${cursorPosition}%` }\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-if=\"activeItem\" class=\"timeline-detail-card mt-3\">\r\n      <div class=\"card border-0 shadow-sm\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row align-items-center\">\r\n            <div class=\"col-md-2 text-center mb-3 mb-md-0\">\r\n              <div class=\"weather-icon-lg\">\r\n                <i :class=\"getWeatherIcon(activeItem)\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-4 mb-3 mb-md-0\">\r\n              <h4 class=\"mb-1\">{{ activeItem.city }}, {{ activeItem.country }}</h4>\r\n              <div class=\"text-muted\">{{ formatDate(activeItem.fetchDate || activeItem.createdAt || activeItem.date, true) }}</div>\r\n              <div class=\"mt-2\">\r\n                <span class=\"fs-3 fw-bold\">{{ activeItem.temperature }}°C</span>\r\n                <span class=\"ms-2 text-muted\" v-if=\"activeItem.humidity\">\r\n                  <i class=\"fas fa-tint me-1\"></i>{{ activeItem.humidity }}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"weather-details\">\r\n                <div class=\"weather-detail-item\">\r\n                  <i class=\"fas fa-wind text-primary\"></i>\r\n                  <div class=\"weather-detail-text\">\r\n                    <div class=\"weather-detail-label\">Vento</div>\r\n                    <div class=\"weather-detail-value\">{{ activeItem.windSpeed || '0' }} km/h</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"weather-detail-item\">\r\n                  <i class=\"fas fa-compress-alt text-primary\"></i>\r\n                  <div class=\"weather-detail-text\">\r\n                    <div class=\"weather-detail-label\">Pressione</div>\r\n                    <div class=\"weather-detail-value\">{{ activeItem.pressure || '1013' }} hPa</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"weather-detail-item\">\r\n                  <i class=\"fas fa-eye text-primary\"></i>\r\n                  <div class=\"weather-detail-text\">\r\n                    <div class=\"weather-detail-label\">Visibilità</div>\r\n                    <div class=\"weather-detail-value\">{{ activeItem.visibility || 'N/A' }}</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"weather-detail-item\">\r\n                  <i class=\"fas fa-cloud text-primary\"></i>\r\n                  <div class=\"weather-detail-text\">\r\n                    <div class=\"weather-detail-label\">Condizioni</div>\r\n                    <div class=\"weather-detail-value\">{{ activeItem.description }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'WeatherTimeline',\r\n  props: {\r\n    weatherData: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      activeItemIndex: -1,\r\n      isDragging: false,\r\n      startX: 0,\r\n      scrollLeft: 0,\r\n      scale: 1,\r\n      timelineWidth: 1000, // Larghezza iniziale della timeline\r\n      cursorPosition: 50, // Posizione in percentuale\r\n      isDraggingCursor: false\r\n    }\r\n  },\r\n  computed: {\r\n    sortedWeatherData() {\r\n      return [...this.weatherData].sort((a, b) => {\r\n        const dateA = new Date(a.fetchDate || a.createdAt || a.date);\r\n        const dateB = new Date(b.fetchDate || b.createdAt || b.date);\r\n        return dateA - dateB;\r\n      });\r\n    },\r\n    timeRange() {\r\n      if (!this.sortedWeatherData.length) return { min: new Date(), max: new Date() };\r\n      \r\n      const dates = this.sortedWeatherData.map(item => \r\n        new Date(item.fetchDate || item.createdAt || item.date)\r\n      );\r\n      \r\n      const minDate = new Date(Math.min(...dates));\r\n      const maxDate = new Date(Math.max(...dates));\r\n      \r\n      // Aggiungi un po' di margine\r\n      minDate.setHours(minDate.getHours() - 1);\r\n      maxDate.setHours(maxDate.getHours() + 1);\r\n      \r\n      return { min: minDate, max: maxDate };\r\n    },\r\n    timelineTicks() {\r\n      if (!this.sortedWeatherData.length) return [];\r\n      \r\n      const { min, max } = this.timeRange;\r\n      const range = max - min;\r\n      const ticks = [];\r\n      \r\n      // Calcola il numero ottimale di tick in base alla scala\r\n      const numTicks = 5 * this.scale;\r\n      \r\n      for (let i = 0; i <= numTicks; i++) {\r\n        const tickTime = new Date(min.getTime() + (range * (i / numTicks)));\r\n        ticks.push({\r\n          time: tickTime,\r\n          position: (i / numTicks) * 100,\r\n          label: this.formatTickLabel(tickTime)\r\n        });\r\n      }\r\n      \r\n      return ticks;\r\n    },\r\n    activeItem() {\r\n      return this.activeItemIndex >= 0 ? this.sortedWeatherData[this.activeItemIndex] : null;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.updateTimelineWidth();\r\n    window.addEventListener('resize', this.updateTimelineWidth);\r\n    document.addEventListener('mousemove', this.onDrag);\r\n    document.addEventListener('mouseup', this.stopDrag);\r\n    \r\n    // Imposta il primo elemento come attivo se c'è almeno un elemento\r\n    if (this.sortedWeatherData.length) {\r\n      this.setActiveItem(0);\r\n    }\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.updateTimelineWidth);\r\n    document.removeEventListener('mousemove', this.onDrag);\r\n    document.removeEventListener('mouseup', this.stopDrag);\r\n  },\r\n  methods: {\r\n    updateTimelineWidth() {\r\n      // Calcola la larghezza base della timeline\r\n      const baseWidth = this.$refs.timelineWrapper?.clientWidth || 1000;\r\n      \r\n      // Applica la scala\r\n      this.timelineWidth = baseWidth * this.scale;\r\n    },\r\n    startDrag(e) {\r\n      this.isDragging = true;\r\n      this.startX = e.pageX - this.$refs.timelineSlider.offsetLeft;\r\n      this.scrollLeft = this.$refs.timelineSlider.scrollLeft;\r\n    },\r\n    onDrag(e) {\r\n      if (!this.isDragging) return;\r\n      e.preventDefault();\r\n      \r\n      const x = e.pageX - this.$refs.timelineSlider.offsetLeft;\r\n      const walkX = (x - this.startX) * 1.5; // Moltiplica per un fattore per accelerare lo scorrimento\r\n      this.$refs.timelineSlider.scrollLeft = this.scrollLeft - walkX;\r\n      \r\n      // Aggiorna la posizione del cursore in base allo scroll\r\n      this.updateCursorFromScroll();\r\n    },\r\n    stopDrag() {\r\n      this.isDragging = false;\r\n    },\r\n    zoomIn() {\r\n      if (this.scale < 3) {\r\n        this.scale += 0.5;\r\n        this.updateTimelineWidth();\r\n      }\r\n    },\r\n    zoomOut() {\r\n      if (this.scale > 1) {\r\n        this.scale -= 0.5;\r\n        this.updateTimelineWidth();\r\n      }\r\n    },\r\n    getPositionPercent(item) {\r\n      const { min, max } = this.timeRange;\r\n      const range = max - min;\r\n      const time = new Date(item.fetchDate || item.createdAt || item.date);\r\n      \r\n      return ((time - min) / range) * 100;\r\n    },\r\n    formatDate(dateStr, detailed = false) {\r\n      if (!dateStr) return '';\r\n      const date = new Date(dateStr);\r\n      \r\n      if (detailed) {\r\n        return date.toLocaleString();\r\n      } else {\r\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n      }\r\n    },\r\n    formatTickLabel(date) {\r\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    },\r\n    setActiveItem(index) {\r\n      this.activeItemIndex = index;\r\n      \r\n      // Imposta la posizione del cursore sul punto selezionato\r\n      if (index >= 0) {\r\n        const item = this.sortedWeatherData[index];\r\n        this.cursorPosition = this.getPositionPercent(item);\r\n        \r\n        // Scorri la vista per centrare l'elemento selezionato\r\n        this.scrollToPosition(this.cursorPosition);\r\n      }\r\n    },\r\n    scrollToPosition(positionPercent) {\r\n      const timelineSlider = this.$refs.timelineSlider;\r\n      const scrollPos = (positionPercent / 100) * this.timelineWidth - (timelineSlider.clientWidth / 2);\r\n      \r\n      timelineSlider.scrollLeft = scrollPos;\r\n    },\r\n    updateCursorFromScroll() {\r\n      // Calcola la posizione del cursore in base allo scroll\r\n      const timelineSlider = this.$refs.timelineSlider;\r\n      const centerPos = timelineSlider.scrollLeft + (timelineSlider.clientWidth / 2);\r\n      this.cursorPosition = (centerPos / this.timelineWidth) * 100;\r\n      \r\n      // Trova l'elemento più vicino alla posizione del cursore\r\n      this.findClosestItem();\r\n    },\r\n    findClosestItem() {\r\n      if (!this.sortedWeatherData.length) return;\r\n      \r\n      let closestIndex = 0;\r\n      let minDistance = Number.MAX_VALUE;\r\n      \r\n      this.sortedWeatherData.forEach((item, index) => {\r\n        const position = this.getPositionPercent(item);\r\n        const distance = Math.abs(position - this.cursorPosition);\r\n        \r\n        if (distance < minDistance) {\r\n          minDistance = distance;\r\n          closestIndex = index;\r\n        }\r\n      });\r\n      \r\n      if (this.activeItemIndex !== closestIndex) {\r\n        this.activeItemIndex = closestIndex;\r\n      }\r\n    },\r\n    getWeatherClass(item) {\r\n      if (!item || !item.description) return '';\r\n      const desc = item.description.toLowerCase();\r\n      \r\n      if (desc.includes('pioggia') || desc.includes('rain')) return 'weather-rain';\r\n      if (desc.includes('sereno') || desc.includes('clear') || desc.includes('sun')) return 'weather-clear';\r\n      if (desc.includes('nuvol') || desc.includes('cloud')) return 'weather-cloud';\r\n      if (desc.includes('neve') || desc.includes('snow')) return 'weather-snow';\r\n      if (desc.includes('temporale') || desc.includes('storm') || desc.includes('thunder')) return 'weather-storm';\r\n      if (desc.includes('nebbia') || desc.includes('fog')) return 'weather-fog';\r\n      \r\n      return '';\r\n    },\r\n    getWeatherIcon(item) {\r\n      if (!item || !item.description) return 'fas fa-cloud fa-lg text-secondary';\r\n      const desc = item.description.toLowerCase();\r\n      \r\n      if (desc.includes('pioggia') || desc.includes('rain')) return 'fas fa-cloud-rain fa-lg text-info';\r\n      if (desc.includes('sereno') || desc.includes('clear') || desc.includes('sun')) return 'fas fa-sun fa-lg text-warning';\r\n      if (desc.includes('nuvol') || desc.includes('cloud')) return 'fas fa-cloud fa-lg text-secondary';\r\n      if (desc.includes('neve') || desc.includes('snow')) return 'fas fa-snowflake fa-lg text-info';\r\n      if (desc.includes('temporale') || desc.includes('storm') || desc.includes('thunder')) return 'fas fa-bolt fa-lg text-warning';\r\n      if (desc.includes('nebbia') || desc.includes('fog')) return 'fas fa-smog fa-lg text-secondary';\r\n      if (desc.includes('vento') || desc.includes('wind')) return 'fas fa-wind fa-lg text-info';\r\n      \r\n      return 'fas fa-cloud fa-lg text-secondary';\r\n    }\r\n  },\r\n  watch: {\r\n    weatherData: {\r\n      handler() {\r\n        this.updateTimelineWidth();\r\n        \r\n        // Imposta il primo elemento come attivo se c'è almeno un elemento\r\n        if (this.sortedWeatherData.length && this.activeItemIndex === -1) {\r\n          this.setActiveItem(0);\r\n        }\r\n      },\r\n      deep: true\r\n    },\r\n    scale() {\r\n      this.updateTimelineWidth();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.weather-timeline-container {\r\n  position: relative;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.timeline-wrapper {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 150px;\r\n  overflow: hidden;\r\n  border-radius: 0.75rem;\r\n  background-color: #f8f9fa;\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n}\r\n\r\n.timeline-slider {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  position: relative;\r\n  padding: 20px 0;\r\n}\r\n\r\n.timeline-track {\r\n  position: relative;\r\n  height: 110px;\r\n  min-width: 100%;\r\n}\r\n\r\n.timeline-ticks {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 30px;\r\n}\r\n\r\n.timeline-tick {\r\n  position: absolute;\r\n  bottom: 0;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n.tick-line {\r\n  width: 1px;\r\n  height: 10px;\r\n  background-color: #ccc;\r\n  margin: 0 auto;\r\n}\r\n\r\n.tick-label {\r\n  font-size: 0.7rem;\r\n  color: #666;\r\n  text-align: center;\r\n  margin-top: 3px;\r\n}\r\n\r\n.timeline-item {\r\n  position: absolute;\r\n  top: 10px;\r\n  transform: translateX(-50%);\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.timeline-item-dot {\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  background-color: #4a6cf7;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  z-index: 3;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.timeline-item::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 6px;\r\n  left: 50%;\r\n  width: 2px;\r\n  height: 58px;\r\n  background-color: #ccc;\r\n  transform: translateX(-50%);\r\n  z-index: 1;\r\n}\r\n\r\n.timeline-item-content {\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%) scale(0.8);\r\n  background-color: white;\r\n  padding: 8px;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.1);\r\n  width: 90px;\r\n  opacity: 0.7;\r\n  transition: all 0.3s ease;\r\n  z-index: 2;\r\n}\r\n\r\n.timeline-item:hover .timeline-item-content,\r\n.timeline-item.active .timeline-item-content {\r\n  transform: translateX(-50%) scale(1);\r\n  opacity: 1;\r\n  z-index: 10;\r\n}\r\n\r\n.timeline-item:hover .timeline-item-dot,\r\n.timeline-item.active .timeline-item-dot {\r\n  transform: scale(1.5);\r\n  box-shadow: 0 0 0 3px rgba(74, 108, 247, 0.3);\r\n}\r\n\r\n.timeline-item-icon {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 5px;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.timeline-item-info {\r\n  text-align: center;\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.timeline-item-city {\r\n  font-weight: bold;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.timeline-item-temp {\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.timeline-item-date {\r\n  font-size: 0.7rem;\r\n  color: #666;\r\n}\r\n\r\n.timeline-cursor {\r\n  position: absolute;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 2px;\r\n  background-color: #dc3545;\r\n  z-index: 5;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n.timeline-cursor::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  background-color: #dc3545;\r\n}\r\n\r\n.timeline-cursor::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  background-color: #dc3545;\r\n}\r\n\r\n.weather-detail-card {\r\n  margin-top: 1rem;\r\n}\r\n\r\n.weather-details {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 10px;\r\n}\r\n\r\n.weather-detail-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.weather-detail-item i {\r\n  font-size: 1.2rem;\r\n  width: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.weather-detail-label {\r\n  font-size: 0.75rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.weather-detail-value {\r\n  font-weight: bold;\r\n}\r\n\r\n.weather-icon-lg {\r\n  font-size: 3rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n/* Stili condizioni meteo */\r\n.weather-rain .timeline-item-dot {\r\n  background-color: #2196f3;\r\n}\r\n\r\n.weather-clear .timeline-item-dot {\r\n  background-color: #ff9800;\r\n}\r\n\r\n.weather-cloud .timeline-item-dot {\r\n  background-color: #90a4ae;\r\n}\r\n\r\n.weather-snow .timeline-item-dot {\r\n  background-color: #4fc3f7;\r\n}\r\n\r\n.weather-storm .timeline-item-dot {\r\n  background-color: #673ab7;\r\n}\r\n\r\n.weather-fog .timeline-item-dot {\r\n  background-color: #9e9e9e;\r\n}\r\n</style> "],"mappings":"AAsHA,eAAe;EACbA,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,CAAC,CAAC;MACnBC,UAAU,EAAE,KAAK;MACjBC,MAAM,EAAE,CAAC;MACTC,UAAU,EAAE,CAAC;MACbC,KAAK,EAAE,CAAC;MACRC,aAAa,EAAE,IAAI;MAAE;MACrBC,cAAc,EAAE,EAAE;MAAE;MACpBC,gBAAgB,EAAE;IACpB;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,CAAC,GAAG,IAAI,CAACd,WAAW,CAAC,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC1C,MAAMC,KAAI,GAAI,IAAIC,IAAI,CAACH,CAAC,CAACI,SAAQ,IAAKJ,CAAC,CAACK,SAAQ,IAAKL,CAAC,CAACM,IAAI,CAAC;QAC5D,MAAMC,KAAI,GAAI,IAAIJ,IAAI,CAACF,CAAC,CAACG,SAAQ,IAAKH,CAAC,CAACI,SAAQ,IAAKJ,CAAC,CAACK,IAAI,CAAC;QAC5D,OAAOJ,KAAI,GAAIK,KAAK;MACtB,CAAC,CAAC;IACJ,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,CAAC,IAAI,CAACV,iBAAiB,CAACW,MAAM,EAAE,OAAO;QAAEC,GAAG,EAAE,IAAIP,IAAI,CAAC,CAAC;QAAEQ,GAAG,EAAE,IAAIR,IAAI,CAAC;MAAE,CAAC;MAE/E,MAAMS,KAAI,GAAI,IAAI,CAACd,iBAAiB,CAACe,GAAG,CAACC,IAAG,IAC1C,IAAIX,IAAI,CAACW,IAAI,CAACV,SAAQ,IAAKU,IAAI,CAACT,SAAQ,IAAKS,IAAI,CAACR,IAAI,CACxD,CAAC;MAED,MAAMS,OAAM,GAAI,IAAIZ,IAAI,CAACa,IAAI,CAACN,GAAG,CAAC,GAAGE,KAAK,CAAC,CAAC;MAC5C,MAAMK,OAAM,GAAI,IAAId,IAAI,CAACa,IAAI,CAACL,GAAG,CAAC,GAAGC,KAAK,CAAC,CAAC;;MAE5C;MACAG,OAAO,CAACG,QAAQ,CAACH,OAAO,CAACI,QAAQ,CAAC,IAAI,CAAC,CAAC;MACxCF,OAAO,CAACC,QAAQ,CAACD,OAAO,CAACE,QAAQ,CAAC,IAAI,CAAC,CAAC;MAExC,OAAO;QAAET,GAAG,EAAEK,OAAO;QAAEJ,GAAG,EAAEM;MAAQ,CAAC;IACvC,CAAC;IACDG,aAAaA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACtB,iBAAiB,CAACW,MAAM,EAAE,OAAO,EAAE;MAE7C,MAAM;QAAEC,GAAG;QAAEC;MAAI,IAAI,IAAI,CAACH,SAAS;MACnC,MAAMa,KAAI,GAAIV,GAAE,GAAID,GAAG;MACvB,MAAMY,KAAI,GAAI,EAAE;;MAEhB;MACA,MAAMC,QAAO,GAAI,IAAI,IAAI,CAAC9B,KAAK;MAE/B,KAAK,IAAI+B,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAKD,QAAQ,EAAEC,CAAC,EAAE,EAAE;QAClC,MAAMC,QAAO,GAAI,IAAItB,IAAI,CAACO,GAAG,CAACgB,OAAO,CAAC,IAAKL,KAAI,IAAKG,CAAA,GAAID,QAAQ,CAAE,CAAC;QACnED,KAAK,CAACK,IAAI,CAAC;UACTC,IAAI,EAAEH,QAAQ;UACdI,QAAQ,EAAGL,CAAA,GAAID,QAAQ,GAAI,GAAG;UAC9BO,KAAK,EAAE,IAAI,CAACC,eAAe,CAACN,QAAQ;QACtC,CAAC,CAAC;MACJ;MAEA,OAAOH,KAAK;IACd,CAAC;IACDU,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAAC3C,eAAc,IAAK,IAAI,IAAI,CAACS,iBAAiB,CAAC,IAAI,CAACT,eAAe,IAAI,IAAI;IACxF;EACF,CAAC;EACD4C,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1BC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACF,mBAAmB,CAAC;IAC3DG,QAAQ,CAACD,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACE,MAAM,CAAC;IACnDD,QAAQ,CAACD,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACG,QAAQ,CAAC;;IAEnD;IACA,IAAI,IAAI,CAACzC,iBAAiB,CAACW,MAAM,EAAE;MACjC,IAAI,CAAC+B,aAAa,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EACDC,aAAaA,CAAA,EAAG;IACdN,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACR,mBAAmB,CAAC;IAC9DG,QAAQ,CAACK,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACJ,MAAM,CAAC;IACtDD,QAAQ,CAACK,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACH,QAAQ,CAAC;EACxD,CAAC;EACDI,OAAO,EAAE;IACPT,mBAAmBA,CAAA,EAAG;MACpB;MACA,MAAMU,SAAQ,GAAI,IAAI,CAACC,KAAK,CAACC,eAAe,EAAEC,WAAU,IAAK,IAAI;;MAEjE;MACA,IAAI,CAACrD,aAAY,GAAIkD,SAAQ,GAAI,IAAI,CAACnD,KAAK;IAC7C,CAAC;IACDuD,SAASA,CAACC,CAAC,EAAE;MACX,IAAI,CAAC3D,UAAS,GAAI,IAAI;MACtB,IAAI,CAACC,MAAK,GAAI0D,CAAC,CAACC,KAAI,GAAI,IAAI,CAACL,KAAK,CAACM,cAAc,CAACC,UAAU;MAC5D,IAAI,CAAC5D,UAAS,GAAI,IAAI,CAACqD,KAAK,CAACM,cAAc,CAAC3D,UAAU;IACxD,CAAC;IACD8C,MAAMA,CAACW,CAAC,EAAE;MACR,IAAI,CAAC,IAAI,CAAC3D,UAAU,EAAE;MACtB2D,CAAC,CAACI,cAAc,CAAC,CAAC;MAElB,MAAMC,CAAA,GAAIL,CAAC,CAACC,KAAI,GAAI,IAAI,CAACL,KAAK,CAACM,cAAc,CAACC,UAAU;MACxD,MAAMG,KAAI,GAAI,CAACD,CAAA,GAAI,IAAI,CAAC/D,MAAM,IAAI,GAAG,EAAE;MACvC,IAAI,CAACsD,KAAK,CAACM,cAAc,CAAC3D,UAAS,GAAI,IAAI,CAACA,UAAS,GAAI+D,KAAK;;MAE9D;MACA,IAAI,CAACC,sBAAsB,CAAC,CAAC;IAC/B,CAAC;IACDjB,QAAQA,CAAA,EAAG;MACT,IAAI,CAACjD,UAAS,GAAI,KAAK;IACzB,CAAC;IACDmE,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAAChE,KAAI,GAAI,CAAC,EAAE;QAClB,IAAI,CAACA,KAAI,IAAK,GAAG;QACjB,IAAI,CAACyC,mBAAmB,CAAC,CAAC;MAC5B;IACF,CAAC;IACDwB,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACjE,KAAI,GAAI,CAAC,EAAE;QAClB,IAAI,CAACA,KAAI,IAAK,GAAG;QACjB,IAAI,CAACyC,mBAAmB,CAAC,CAAC;MAC5B;IACF,CAAC;IACDyB,kBAAkBA,CAAC7C,IAAI,EAAE;MACvB,MAAM;QAAEJ,GAAG;QAAEC;MAAI,IAAI,IAAI,CAACH,SAAS;MACnC,MAAMa,KAAI,GAAIV,GAAE,GAAID,GAAG;MACvB,MAAMkB,IAAG,GAAI,IAAIzB,IAAI,CAACW,IAAI,CAACV,SAAQ,IAAKU,IAAI,CAACT,SAAQ,IAAKS,IAAI,CAACR,IAAI,CAAC;MAEpE,OAAQ,CAACsB,IAAG,GAAIlB,GAAG,IAAIW,KAAK,GAAI,GAAG;IACrC,CAAC;IACDuC,UAAUA,CAACC,OAAO,EAAEC,QAAO,GAAI,KAAK,EAAE;MACpC,IAAI,CAACD,OAAO,EAAE,OAAO,EAAE;MACvB,MAAMvD,IAAG,GAAI,IAAIH,IAAI,CAAC0D,OAAO,CAAC;MAE9B,IAAIC,QAAQ,EAAE;QACZ,OAAOxD,IAAI,CAACyD,cAAc,CAAC,CAAC;MAC9B,OAAO;QACL,OAAOzD,IAAI,CAAC0D,kBAAkB,CAAC,EAAE,EAAE;UAAEC,IAAI,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAU,CAAC,CAAC;MAC5E;IACF,CAAC;IACDnC,eAAeA,CAACzB,IAAI,EAAE;MACpB,OAAOA,IAAI,CAAC0D,kBAAkB,CAAC,EAAE,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;IAC5E,CAAC;IACD1B,aAAaA,CAAC2B,KAAK,EAAE;MACnB,IAAI,CAAC9E,eAAc,GAAI8E,KAAK;;MAE5B;MACA,IAAIA,KAAI,IAAK,CAAC,EAAE;QACd,MAAMrD,IAAG,GAAI,IAAI,CAAChB,iBAAiB,CAACqE,KAAK,CAAC;QAC1C,IAAI,CAACxE,cAAa,GAAI,IAAI,CAACgE,kBAAkB,CAAC7C,IAAI,CAAC;;QAEnD;QACA,IAAI,CAACsD,gBAAgB,CAAC,IAAI,CAACzE,cAAc,CAAC;MAC5C;IACF,CAAC;IACDyE,gBAAgBA,CAACC,eAAe,EAAE;MAChC,MAAMlB,cAAa,GAAI,IAAI,CAACN,KAAK,CAACM,cAAc;MAChD,MAAMmB,SAAQ,GAAKD,eAAc,GAAI,GAAG,GAAI,IAAI,CAAC3E,aAAY,GAAKyD,cAAc,CAACJ,WAAU,GAAI,CAAE;MAEjGI,cAAc,CAAC3D,UAAS,GAAI8E,SAAS;IACvC,CAAC;IACDd,sBAAsBA,CAAA,EAAG;MACvB;MACA,MAAML,cAAa,GAAI,IAAI,CAACN,KAAK,CAACM,cAAc;MAChD,MAAMoB,SAAQ,GAAIpB,cAAc,CAAC3D,UAAS,GAAK2D,cAAc,CAACJ,WAAU,GAAI,CAAE;MAC9E,IAAI,CAACpD,cAAa,GAAK4E,SAAQ,GAAI,IAAI,CAAC7E,aAAa,GAAI,GAAG;;MAE5D;MACA,IAAI,CAAC8E,eAAe,CAAC,CAAC;IACxB,CAAC;IACDA,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAC,IAAI,CAAC1E,iBAAiB,CAACW,MAAM,EAAE;MAEpC,IAAIgE,YAAW,GAAI,CAAC;MACpB,IAAIC,WAAU,GAAIC,MAAM,CAACC,SAAS;MAElC,IAAI,CAAC9E,iBAAiB,CAAC+E,OAAO,CAAC,CAAC/D,IAAI,EAAEqD,KAAK,KAAK;QAC9C,MAAMtC,QAAO,GAAI,IAAI,CAAC8B,kBAAkB,CAAC7C,IAAI,CAAC;QAC9C,MAAMgE,QAAO,GAAI9D,IAAI,CAAC+D,GAAG,CAAClD,QAAO,GAAI,IAAI,CAAClC,cAAc,CAAC;QAEzD,IAAImF,QAAO,GAAIJ,WAAW,EAAE;UAC1BA,WAAU,GAAII,QAAQ;UACtBL,YAAW,GAAIN,KAAK;QACtB;MACF,CAAC,CAAC;MAEF,IAAI,IAAI,CAAC9E,eAAc,KAAMoF,YAAY,EAAE;QACzC,IAAI,CAACpF,eAAc,GAAIoF,YAAY;MACrC;IACF,CAAC;IACDO,eAAeA,CAAClE,IAAI,EAAE;MACpB,IAAI,CAACA,IAAG,IAAK,CAACA,IAAI,CAACmE,WAAW,EAAE,OAAO,EAAE;MACzC,MAAMC,IAAG,GAAIpE,IAAI,CAACmE,WAAW,CAACE,WAAW,CAAC,CAAC;MAE3C,IAAID,IAAI,CAACE,QAAQ,CAAC,SAAS,KAAKF,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,cAAc;MAC5E,IAAIF,IAAI,CAACE,QAAQ,CAAC,QAAQ,KAAKF,IAAI,CAACE,QAAQ,CAAC,OAAO,KAAKF,IAAI,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO,eAAe;MACrG,IAAIF,IAAI,CAACE,QAAQ,CAAC,OAAO,KAAKF,IAAI,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,eAAe;MAC5E,IAAIF,IAAI,CAACE,QAAQ,CAAC,MAAM,KAAKF,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,cAAc;MACzE,IAAIF,IAAI,CAACE,QAAQ,CAAC,WAAW,KAAKF,IAAI,CAACE,QAAQ,CAAC,OAAO,KAAKF,IAAI,CAACE,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,eAAe;MAC5G,IAAIF,IAAI,CAACE,QAAQ,CAAC,QAAQ,KAAKF,IAAI,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO,aAAa;MAEzE,OAAO,EAAE;IACX,CAAC;IACDC,cAAcA,CAACvE,IAAI,EAAE;MACnB,IAAI,CAACA,IAAG,IAAK,CAACA,IAAI,CAACmE,WAAW,EAAE,OAAO,mCAAmC;MAC1E,MAAMC,IAAG,GAAIpE,IAAI,CAACmE,WAAW,CAACE,WAAW,CAAC,CAAC;MAE3C,IAAID,IAAI,CAACE,QAAQ,CAAC,SAAS,KAAKF,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,mCAAmC;MACjG,IAAIF,IAAI,CAACE,QAAQ,CAAC,QAAQ,KAAKF,IAAI,CAACE,QAAQ,CAAC,OAAO,KAAKF,IAAI,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO,+BAA+B;MACrH,IAAIF,IAAI,CAACE,QAAQ,CAAC,OAAO,KAAKF,IAAI,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,mCAAmC;MAChG,IAAIF,IAAI,CAACE,QAAQ,CAAC,MAAM,KAAKF,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,kCAAkC;MAC7F,IAAIF,IAAI,CAACE,QAAQ,CAAC,WAAW,KAAKF,IAAI,CAACE,QAAQ,CAAC,OAAO,KAAKF,IAAI,CAACE,QAAQ,CAAC,SAAS,CAAC,EAAE,OAAO,gCAAgC;MAC7H,IAAIF,IAAI,CAACE,QAAQ,CAAC,QAAQ,KAAKF,IAAI,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO,kCAAkC;MAC9F,IAAIF,IAAI,CAACE,QAAQ,CAAC,OAAO,KAAKF,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,6BAA6B;MAEzF,OAAO,mCAAmC;IAC5C;EACF,CAAC;EACDE,KAAK,EAAE;IACLtG,WAAW,EAAE;MACXuG,OAAOA,CAAA,EAAG;QACR,IAAI,CAACrD,mBAAmB,CAAC,CAAC;;QAE1B;QACA,IAAI,IAAI,CAACpC,iBAAiB,CAACW,MAAK,IAAK,IAAI,CAACpB,eAAc,KAAM,CAAC,CAAC,EAAE;UAChE,IAAI,CAACmD,aAAa,CAAC,CAAC,CAAC;QACvB;MACF,CAAC;MACDgD,IAAI,EAAE;IACR,CAAC;IACD/F,KAAKA,CAAA,EAAG;MACN,IAAI,CAACyC,mBAAmB,CAAC,CAAC;IAC5B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}