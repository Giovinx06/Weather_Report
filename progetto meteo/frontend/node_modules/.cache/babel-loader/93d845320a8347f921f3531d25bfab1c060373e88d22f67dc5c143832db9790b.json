{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"weather-view container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"col-auto\"\n};\nconst _hoisted_3 = {\n  class: \"col-auto\"\n};\nconst _hoisted_4 = {\n  class: \"col-auto\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"alert alert-danger\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"alert alert-info\"\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"alert alert-secondary\"\n};\nconst _hoisted_8 = {\n  key: 3,\n  class: \"table table-striped mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"Meteo\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    class: \"row g-3 mb-4\",\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.fetchWeather && $options.fetchWeather(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.city = $event),\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"Inserisci una città\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.city]])]), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.condition = $event),\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"Condizione (es. Clear, Rain)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.condition]])]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.date = $event),\n    type: \"date\",\n    class: \"form-control\",\n    placeholder: \"Data\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.date]])]), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"col-auto\"\n  }, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Cerca Meteo\")], -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"Caricamento...\")) : _createCommentVNode(\"v-if\", true), _ctx.weatherData.length === 0 && !$data.loading && !$data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \" Nessun dato meteo disponibile. Cerca una città per visualizzare i dati. \")) : _createCommentVNode(\"v-if\", true), _ctx.weatherData.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_8, [_cache[5] || (_cache[5] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Città\"), _createElementVNode(\"th\", null, \"Temperatura\"), _createElementVNode(\"th\", null, \"Condizione\"), _createElementVNode(\"th\", null, \"Data\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.weatherData, (item, idx) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: idx\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.city), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.temperature) + \" °C\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.condition), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.date), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","fetchWeather","_hoisted_2","$event","$data","city","type","placeholder","required","_hoisted_3","condition","_hoisted_4","date","error","_hoisted_5","_toDisplayString","_createCommentVNode","loading","_hoisted_6","_ctx","weatherData","length","_hoisted_7","_hoisted_8","_Fragment","_renderList","item","idx","temperature"],"sources":["C:\\Programmazione\\Wheater_Report\\progetto\\frontend\\src\\views\\WeatherView.vue"],"sourcesContent":["<template>\r\n  <div class=\"weather-view container mt-5\">\r\n    <h2>Meteo</h2>\r\n    <form class=\"row g-3 mb-4\" @submit.prevent=\"fetchWeather\">\r\n      <div class=\"col-auto\">\r\n        <input v-model=\"city\" type=\"text\" class=\"form-control\" placeholder=\"Inserisci una città\" required />\r\n      </div>\r\n      <div class=\"col-auto\">\r\n        <input v-model=\"condition\" type=\"text\" class=\"form-control\" placeholder=\"Condizione (es. Clear, Rain)\" />\r\n      </div>\r\n      <div class=\"col-auto\">\r\n        <input v-model=\"date\" type=\"date\" class=\"form-control\" placeholder=\"Data\" />\r\n      </div>\r\n      <div class=\"col-auto\">\r\n        <button type=\"submit\" class=\"btn btn-primary\">Cerca Meteo</button>\r\n      </div>\r\n    </form>\r\n    <div v-if=\"error\" class=\"alert alert-danger\">{{ error }}</div>\r\n    <div v-if=\"loading\" class=\"alert alert-info\">Caricamento...</div>\r\n    <div v-if=\"weatherData.length === 0 && !loading && !error\" class=\"alert alert-secondary\">\r\n      Nessun dato meteo disponibile. Cerca una città per visualizzare i dati.\r\n    </div>\r\n    <table v-if=\"weatherData.length > 0\" class=\"table table-striped mt-4\">\r\n      <thead>\r\n        <tr>\r\n          <th>Città</th>\r\n          <th>Temperatura</th>\r\n          <th>Condizione</th>\r\n          <th>Data</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(item, idx) in weatherData\" :key=\"idx\">\r\n          <td>{{ item.city }}</td>\r\n          <td>{{ item.temperature }} °C</td>\r\n          <td>{{ item.condition }}</td>\r\n          <td>{{ item.date }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: \"WeatherView\",\r\n  data() {\r\n    return {\r\n      city: '',\r\n      condition: '',\r\n      date: '',\r\n      loading: false,\r\n      error: ''\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['weatherData'])\r\n  },\r\n  methods: {\r\n    async fetchWeather() {\r\n      this.error = ''\r\n      this.loading = true\r\n      try {\r\n        await this.$store.dispatch('fetchNewWeatherData', {\r\n          city: this.city,\r\n          condition: this.condition,\r\n          date: this.date\r\n        })\r\n        await this.$store.dispatch('fetchWeatherData')\r\n      } catch (err) {\r\n        this.error = err.response?.data?.message || 'Errore durante il recupero dei dati meteo.'\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.weatherData.length === 0) {\r\n      this.$store.dispatch('fetchWeatherData').catch(() => {})\r\n    }\r\n  }\r\n}\r\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}